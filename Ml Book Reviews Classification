import torch
from transformers import BertTokenizer, BertForSequenceClassification, Trainer, TrainingArguments
from datasets import load_dataset

# Загрузка данных
dataset = load_dataset('yelp_review_full', split='train[:10000]')  # Используем готовый набор данных с отзывами

# Подготовка данных
tokenizer = BertTokenizer.from_pretrained('bert-base-uncased')
def tokenize_function(examples):
    return tokenizer(examples['text'], padding='max_length', truncation=True)

tokenized_datasets = dataset.map(tokenize_function, batched=True)
tokenized_datasets = tokenized_datasets.train_test_split(test_size=0.2)

# Загрузка модели
model = BertForSequenceClassification.from_pretrained('bert-base-uncased', num_labels=2)

# Настройка тренировки
training_args = TrainingArguments(
    output_dir='./results',
    evaluation_strategy='epoch',
    per_device_train_batch_size=8,
    per_device_eval_batch_size=8,
    num_train_epochs=3,
    logging_dir='./logs',
)

# Создание тренера
trainer = Trainer(
    model=model,
    args=training_args,
    train_dataset=tokenized_datasets['train'],
    eval_dataset=tokenized_datasets['test']
)

# Обучение модели
trainer.train()

# Сохранение модели
model.save_pretrained('./model')
tokenizer.save_pretrained('./model')
